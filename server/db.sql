BEGIN;

CREATE SCHEMA IF NOT EXISTS srsbot;

DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users (
 id INTEGER PRIMARY KEY,
 created_at TIMESTAMP NOT NULL DEFAULT NOW(),
 updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
 rehearsal TIMESTAMP NOT NULL DEFAULT NOW(),
 rehearsal_time TIME NOT NULL DEFAULT '12:00',
 state INTEGER NOT NULL DEFAULT 0,
 time_zone TEXT NOT NULL DEFAULT 'America/New_York',
 data JSONB NOT NULL DEFAULT '{}',
 scheduled BOOLEAN NOT NULL DEFAULT FALSE
);
CREATE INDEX ON users (rehearsal) WHERE scheduled;

DROP TABLE IF EXISTS decks CASCADE;
CREATE TABLE decks (
 id SERIAL PRIMARY KEY,
 created_at TIMESTAMP NOT NULL DEFAULT NOW(),
 updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
 user_id INTEGER REFERENCES users ON DELETE CASCADE,
 name TEXT NOT NULL,
 scheduled BOOLEAN NOT NULL DEFAULT TRUE,
 UNIQUE (user_id, name)
);

DROP TABLE IF EXISTS cards;
CREATE TABLE cards (
 id SERIAL PRIMARY KEY,
 created_at TIMESTAMP NOT NULL DEFAULT NOW(),
 updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
 deck_id INTEGER REFERENCES decks ON DELETE CASCADE,
 front JSONB NOT NULL DEFAULT '[]',
 back JSONB NOT NULL DEFAULT '[]',
 easiness_factor SMALLINT NOT NULL DEFAULT 250,
 previous_interval SMALLINT NOT NULL DEFAULT 1,
 repetition SMALLINT NOT NULL DEFAULT 1 CHECK (repetition >= 1),
 repetition_today SMALLINT NOT NULL DEFAULT 0 CHECK (repetition_today >= 0),
 random_order INTEGER NOT NULL DEFAULT TRUNC(RANDOM() * 2147483647)::INTEGER,
 next_repetition DATE NOT NULL DEFAULT (CURRENT_DATE - 7),
 UNIQUE (deck_id, front)
);
CREATE INDEX ON cards (deck_id, next_repetition ASC, repetition ASC);

END;
